/*
  Grid

  1)
    grid-template-columns
      -> 원하는 열의 개수를 조절 가능
    grid-template-rows
      -> 원하는 행의 개수를 조절 가능

  2)
    fr => 일종의 여분 공간에 대한 % 개념 
      -> 1fr 1fr = 50% 50%
      ex) grid-template-columns: 1fr 2fr 1fr = 전체 너버를 4등분한 후 25% 50% 25% 로 배분

  - 꼭 fr로 공간을 배분하지 않아도 된다.. px등도 가능
  - grid-template-columns 와 grid-template-rows를 적절하게 혼합하여 사용도 가능

  3) grid-template: 1fr 1fr 300px (rows) / 1fr 1fr 1fr (columns);

  4) minmax(최솟값, 최대값)
    grid-template-columns: minmax(100px, 300px) minmax(200px, 400px);
      -> 최소: grid-template-columns: 100px 200px
      -> 최대: grid-template-columns: 300px 400px

  5) repeat(반복횟수, 반복할값)
    grid-template-columns: repeat(3, 1fr);

  6) fit-content(최대값)
    grid-item 안의 내용때문에 너비가 넘치더라도, 위처럼 설정하면 최대 너비를 넘지않게 조정된다

  7) gap
    column-gap: 2px;
    row-gap: 4px;
    grid-gap: row-gap column-gap

  8) grid item position
    grid-column-start: 1;
    grid-column-end: 3;
      -> 해당 그리드 아이템이 차지하는 공간은 첫번째 그리드선 ~ 3번째 그리드선
        (여기서 그리드선이란 1fr 1fr 1fr이면 4개가 존재하는것이다)
      -> 만약 앞에 span 키워드를 붙이면 차지하는 공간은 첫번째 그리드 ~ 3번째 그리드가 될것이다 (선x)
    
    위의 내용들을 짧게 나타낼수있다
      grid-column: 1/3 = grid-column-start: 1; grid-column-end: 3;
  
    9) grid-template-areas
      grid-template-areas:
        "a a b"
        "a a b";
        -> 그리드 청사진을 잡고, 해당 문자를 그리드 아이템이 배정하여 위치를 조정한다
*/

.container {
  height: 700px;
  width: 700px;
  margin: 200px auto;
  background-color: black;
  box-shadow: 0 6px 20px rgb(0 0 0 / 0.2);
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  grid-gap: 10px;
  grid-template-areas:
    "a a b"
    "a a b";
}

.box {
  color: white;
  font-size: 1.5rem;
  text-align: center;
}

.item {
  grid-area: a;
}
.item2 {
  grid-area: b;
}
